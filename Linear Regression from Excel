# -*- coding: utf-8 -*-
"""
Created on Sun Dec  4 17:10:51 2022

@author: User
"""


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def estimate_coef(x , y):
    #Number of estimations
    n = np.size(x)
        
    #Mean of x and y vectors
    m_x = np.mean(x) 
    m_y = np.mean(y)
    
    #calculating cross deviation and deviation about x
    SS_xy = np.sum(x*y) - n*m_y*m_x
    SS_xx = np.sum(x*x) - n*m_x*m_x
    
    #calculating regression coefficients
    b_1 = SS_xy / SS_xx
    b_0 = m_y - b_1*m_x
    
    return (b_0 , b_1)

def plot_regression_line(x, y, b):
    #plot real data as scatter plot
    plt.scatter(x, y, color = "m", marker = "o", s = 30)
    
    #predicted response vector
    y_pred = b[0] + b[1]*x
    
    #plotting the regression line
    plt.plot(x, y_pred, color = "g")
    
    #putting labels
    plt.xlabel('x')
    plt.ylabel('y')
    
    #function to show plot
    plt.show()
    
def main():
    #observations / data
    df = pd.read_excel(r'C:\Users\User\Desktop\Regression Data.xlsx')

    x = df.iloc[:,0]
    y = df.iloc[:,1]
    
    #estimating coefficients
    b = estimate_coef(x, y)
    print("Estimated coefficients\nb_0 = {}  \
          \nb_1 = {}".format(b[0], b[1]))
          
    #plot regression line
    plot_regression_line(x, y, b) 
    
if __name__ == "__main__":
    main()     
        
        
    
    
